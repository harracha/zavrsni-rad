// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  teacherId      String      @id @default(cuid())
  firstName      String
  lastName       String
  email          String      @unique
  password       String
  profilePicture String?
  Role           SystemRole  @default(PROFESSOR)
  classGroupId   String?
  classGroup     ClassGroup? @relation(fields: [classGroupId], references: [groupId])
  LabGroupId     String?
  labGroup       LabGroup?   @relation(fields: [LabGroupId], references: [groupId])

  @@index([teacherId])
  @@index([email])
}

model Student {
  studentId      String       @id @default(cuid())
  firstName      String
  lastName       String
  email          String       @unique
  password       String
  JMBAG          String       @unique
  acYear         String?
  profilePicture String?
  Role           SystemRole   @default(STUDENT)
  Enrollment     Enrollment[]

  @@index([studentId])
  @@index([JMBAG])
  @@index([email])
}

model Enrollment {
  enrollmentId String     @id @default(cuid())
  studentJMBAG String
  student      Student    @relation(fields: [studentJMBAG], references: [JMBAG])
  acYear       String
  repeater     Boolean    @default(false)
  nr_repeat    Int        @default(0)
  classGroup   ClassGroup @relation(fields: [classGroupId], references: [groupId])
  classGroupId String
  labGroup     LabGroup   @relation(fields: [labGroupId], references: [groupId])
  labGroupId   String

  @@index([studentJMBAG])
  @@index([classGroupId])
  @@index([labGroupId])
  @@index([acYear, classGroupId, labGroupId])
}

model ClassGroup {
  groupId    String       @id @default(cuid())
  groupName  String       @unique
  exams      Exam[]
  midterms   Midterm[]
  teacher    Teacher[]
  Enrollment Enrollment[]
  homeworks  Homework[]

  @@index([groupName])
}

model LabGroup {
  groupId      String        @id @default(cuid())
  groupName    String        @unique
  labExercises LabExercise[]
  teacher      Teacher[]
  Enrollment   Enrollment[]

  @@index([groupName])
}

model LabExercise {
  exerciseId String   @id @default(cuid())
  labName    LabName
  acyear     String?
  labPoints  Float?
  kpzPoints  Float?
  LabGroup   LabGroup @relation(fields: [labGroupId], references: [groupId])
  labGroupId String

  @@index([acyear])
  @@index([labGroupId])
  @@index([acyear, labGroupId])
}

model Homework {
  homeworkId   String       @id @default(cuid())
  name         HomeworkName
  acYear       String?
  points       Float
  ClassGroup   ClassGroup   @relation(fields: [classGroupId], references: [groupId])
  classGroupId String

  @@index([acYear])
  @@index([classGroupId])
  @@index([acYear, classGroupId])
}

model Midterm {
  midtermId       String      @id @default(cuid())
  exam_scan       String?
  version         Version
  student_answers Json?
  answers_written Json?
  points_written  Float
  points_oral     Float
  acYear          String
  MidtermType     MidtermType
  ClassGroup      ClassGroup  @relation(fields: [classGroupId], references: [groupId])
  classGroupId    String

  @@index([acYear])
  @@index([classGroupId])
  @@index([acYear, classGroupId])
}

model Exam {
  examId          String     @id @default(cuid())
  exam_scan       String?
  version         Version
  acYear          String
  student_answers Json?
  answers_written Json?
  points_written  Int?
  points_oral     Int?
  studentId       String
  ExamType        ExamType
  ClassGroup      ClassGroup @relation(fields: [classGroupId], references: [groupId])
  classGroupId    String

  @@index([classGroupId])
  @@index([acYear])
  @@index([acYear, classGroupId])
}

enum SystemRole {
  PROFESSOR
  ASSISTANT
  STUDENT
  ADMIN
}

enum MidtermType {
  MI
  ZI
}

enum ExamType {
  JIR
  LJIR
  ZIR
  DIR
}

enum Version {
  A
  B
  C
  D
}

enum HomeworkName {
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
}

enum LabName {
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
  SIXTH
  SEVENTH
  EIGHTH
  NINTH
}
